name: legate-boost build/test

concurrency:
  group: ci-on-${{ github.event_name }}-from-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "pull-request/[0-9]+"
      - "branch-*"
      - "main"
jobs:

  # group together all jobs that must pass for a PR to be merged
  # (for use by branch protections)
  pr-builder:
    # skip on builds from merges to main
    if: github.ref != 'refs/heads/main'
    needs:
      - pre-commit
      - conda-python-build
      - conda-python-tests-cpu
      - conda-python-tests-gpu
      - docs-build
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@branch-24.10

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: short-circuit
      run: exit 0
    # - uses: actions/checkout@v4
    # - uses: pre-commit/action@v3.0.1

  conda-python-build:
    needs: [pre-commit]
    strategy:
      fail-fast: false
      # As of the last time this was updated, legate-core / cunumeric packages were published for only:
      #
      #  * architectures: amd64 only#
      #  * CUDA: >=12.2
      #  * Python: 3.10, 3.11, 3.12
      #
      # Valid set of RAPIDS ci-conda image tags: # valid CI image tags: https://hub.docker.com/r/rapidsai/ci-conda/tags
      matrix:
        ARCH:
          - "amd64"
        CUDA_VER:
          - "12.5.1"
        PY_VER:
          - "3.10"
          - "3.11"
          - "3.12"
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.10
    secrets: inherit
    with:
      arch: ${{ matrix.ARCH }}
      build_type: pull-request
      container_image: "rapidsai/ci-conda:cuda${{ matrix.CUDA_VER }}-ubuntu22.04-py${{ matrix.PY_VER }}"
      node_type: "cpu4"
      run_script: ci/build_python.sh

  conda-python-tests-cpu:
    needs: [conda-python-build]
    strategy:
      fail-fast: false
      # valid CI image tags: https://hub.docker.com/r/rapidsai/ci-conda/tags
      matrix:
        include:
          - ARCH: "amd64"
            PY_VER: "3.11"
            CUDA_VER: "12.5.1"
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.10
    with:
      arch: ${{ matrix.ARCH }}
      build_type: pull-request
      container_image: "rapidsai/ci-conda:cuda${{ matrix.CUDA_VER }}-ubuntu22.04-py${{ matrix.PY_VER }}"
      # use a runner that does not have a GPU
      node_type: "cpu16"
      run_script: ci/test_python_cpu.sh

  conda-python-tests-gpu:
    needs: [conda-python-build]
    strategy:
      fail-fast: false
      # valid CI image tags: https://hub.docker.com/r/rapidsai/ci-conda/tags
      matrix:
        include:
          - ARCH: "amd64"
            PY_VER: "3.10"
            CUDA_VER: "12.5.1"
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.10
    with:
      arch: ${{ matrix.ARCH }}
      build_type: pull-request
      container_image: "rapidsai/ci-conda:cuda${{ matrix.CUDA_VER }}-ubuntu22.04-py${{ matrix.PY_VER }}"
      node_type: "gpu-v100-latest-1"
      run_script: ci/test_python_gpu.sh

  docs-build:
    needs:
      - conda-python-build
    runs-on: linux-amd64-cpu4
    container:
      image: "rapidsai/ci-conda:latest"
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
    steps:
      - name: install git-lfs
        run: |
          conda install --yes \
            -c conda-forge \
              git-lfs
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: build docs
        run: |
          ci/build_docs.sh
      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html

  deploy:
    needs:
      - conda-python-build
      - conda-python-tests-cpu
      - conda-python-tests-gpu
      - docs-build

    # only main branch uploads docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
